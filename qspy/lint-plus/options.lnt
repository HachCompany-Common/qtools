//============================================================================
// QSPY software tracing host-side utility
//
//                   Q u a n t u m  L e a P s
//                   ------------------------
//                   Modern Embedded Software
//
// Copyright(C) 2005 Quantum Leaps, LLC.All rights reserved.
//
// This software is licensed under the terms of the Quantum Leaps
// QSPY SOFTWARE TRACING HOST UTILITY SOFTWARE END USER LICENSE.
// Please see the file LICENSE-qspy.txt for the complete license text.
//
// Quantum Leaps contact information :
// <www.state-machine.com/licensing>
// <info@state-machine.com>
//============================================================================
//! @date Last updated on: 2024-10-31
//! @version Last updated for version: 8.0.0
//!
//! @file
//! @brief PC-Lint-Plus option file for linting QSPY source code

//============================================================================
// general options
-unit_check        // perform only subset check (suppresses Global Wrapup)
-max_threads=1     // suppress message "no '-max_threads=N' option"
++efreeze(686)     // never suppress (see PC-Lint-Plus in Safety-Critical)
//-vf              // print names of all source files (for debugging linting)

// include directories
-i.                // compiler config
-i../priv_inc      // QSPY includes

// standards
// language standard...
co-gcc.lnt         // GCC config

au-ds.lnt          // Dan Saks recommendations
cpu.lnt            // size/alignment options for the chosen CPU

//============================================================================
// "no return" semantics for error/failure callbacks
-sem(Q_onError, r_no)

//============================================================================
-e786    // string concatenation within initializer
-e641    // implicit conversion of enum to integral type
//-e534    // ignoring return value of function
-e834    // operator '-' followed '-' could be confusing without parentheses
-e816    // non-ISO format specification '%I64d'
-e705    // format '%I64d' specifies type '__int64' (aka 'long long')
         // which is nominally inconsistent with argument 'uint64_t'